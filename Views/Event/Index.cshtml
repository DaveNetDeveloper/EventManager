@model IEnumerable<EventManager.Event>
@using GridMvc.Html
@{
    ViewBag.Title = "Events";
}

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<div class="jumbotron">

    <button type="button" class="btn btn-primary">btn-primary</button>
    <button type="button" class="btn btn-success">btn-primary</button>
    <button type="button" class="btn btn-info">btn-primary</button>
    <button type="button" class="btn btn-danger">btn-primary</button>

    <br />
    <br />

    @{
        @*var evento = ViewData["firstEvent"] as Event;

            @Html.Label("ViewModel from ViewData Session Object:")
            <br />
            @Html.Label("Id:")
            @Html.LabelForModel(evento.Id.ToString())
            <br />
            @Html.Label("Nombre:")
            @Html.LabelForModel(evento.Name)
            <br />
            @Html.Label("Capacidad:")
            @Html.LabelForModel(evento.Capacity.ToString())
            <br />
            @Html.Label("Fecha del evento:")
            @Html.LabelForModel(evento.EventDateTime.ToString())*@

        @*<br /> <br />
            @Html.Label("ViewModel from returned View from Controller:")
            <br />
            @Html.Label("Id:")
            @Html.Label(@Model.Id.ToString())
            <br />
            @Html.Label("Nombre:")
            @Html.LabelForModel(@Model.Name)
            <br />
            @Html.Label("Código de lenguaje:")
            @Html.LabelForModel(@Model.Language.Code)
            <br />
            @Html.Label("Nombre compañia:")
            @Html.LabelForModel(@Model.Company.Name)*@
    }

    @using (Ajax.BeginForm("AddNew", new AjaxOptions
    {
        HttpMethod = "Post",
        OnSuccess = "Loaded"
    }))
    {
        <button type="submit" value="Create" class="btn btn-info">Add new event</button>
    }

    @*<script type="text/javascript">
            function Loaded(result) {
                alert('result ' + result.Name);
            }
        </script>*@

    @{
        //var eventos = ViewData["allEvents"] as List<Event>;

        @Html.Grid(ViewData.Model).Columns(columns =>
        {
           columns.Add().Titled("<input id='allChk' type='checkbox' /> ")
            .Encoded(false).Sanitized(false).SetWidth(30)
            .RenderValueAs(o => Html.CheckBox("checked", false, new { name = "checked", value = o.Id, }));

           columns.Add(c => c.Id).Titled("Event ID");
           columns.Add(c => c.Name).Titled("Name");
           columns.Add(c => c.Description).Titled("Description");
           columns.Add(c => c.Capacity).Titled("Capacity");
           columns.Add(c => c.EventDateTime).Titled("EventDateTime");
           //columns.Add(c => c.Company.Name).Titled("Company Name");
           //columns.Add(c => c.Language.Name).Titled("Language Name");
           columns.Add().Titled(" ").Css("btn glyphicon glyphicon-pencil").Filterable(false).Sortable(false)
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(c => Html.ActionLink("Edit", "Edit", new { id = c.Id }));

           columns.Add().Css("glyphicon glyphicon-trash").Filterable(false)
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(c => Html.ActionLink("Delete", null, null, new { @onclick = "return DeleteEventById(" + c.Id + ",'" + c.Name + "');" }));
       }).WithPaging(10).Sortable(true).Filterable(true);
    }

</div>

<script type="text/javascript">

    function selectedCheckbox(status) {
        $("input[type=checkbox]").each(function () {
            $(this).prop("checked", status);
        });
    }

    $(document).ready(function () {

        var checkAllBox = $("#allChk"); 

        checkAllBox.click(function () {
            var status = checkAllBox.prop('checked');
            selectedCheckbox(status);
        });
    });

    function DeleteEventById(eventId, eventName) {

        var opcion = confirm("¿Seguro que deseas eliminar el evento [" + eventName + "]?");
        if (opcion == true) {
                $.ajax({
                url: '@Url.Action("Delete", "Event")',
                data: { id: eventId },
                type: 'POST',
                success: function () { alert("El evento se ha eliminado correcatemente."); },
                error: function () { alert("Ha ocurrido un error eliminando el evento."); }
        });
	    } else {
            return false;
        }
    }

</script> 