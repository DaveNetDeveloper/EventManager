@model IEnumerable<EventManager.Event>
@using GridMvc.Html
@{
    ViewBag.Title = "Events";
}
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<style type="text/css"> 
    .tableCell{
       display: table-cell !important;
    } 
</style>

<div class="jumbotron">
    <h2>Events</h2>
    <br />
    @using (Ajax.BeginForm("Create", new AjaxOptions
    {
        HttpMethod = "Post",
        OnSuccess = "Loaded"
    }))
    {
        <button type="submit" value="Create" class="btn btn-success">Create</button>
    }
    <br />
    <input type="button" class="btn btn-primary" value="Disable" onclick="location.href='@Url.Action("Disable", "Event")'" />
    <br /><br />
     
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModalCenter">
        Delete Simulation
    </button>
    <br /><br />
     
    @{
        //var eventos = ViewData["allEvents"] as List<Event>;
        @Html.Grid(ViewData.Model).Columns(columns =>
        {
           columns.Add().Titled("<input id='allChk' type='checkbox' /> ")
            .Encoded(false).Sanitized(false).SetWidth(30)
            .RenderValueAs(o => Html.CheckBox("checked", false, new { name = "checked", value = o.Id, }));

           columns.Add(c => c.Id).Titled("Event ID");
           columns.Add(c => c.Name).Titled("Name");
           columns.Add(c => c.Description).Titled("Description");
           columns.Add(c => c.Capacity).Titled("Capacity");
           columns.Add(c => c.EventDateTime).Titled("Event DateTime");
           columns.Add(c => c.Sessions).Titled("Nº Sessions");
           columns.Add(c => c.Active).Titled("Active").RenderValueAs(c => c.Active == true ? "Yes" : "No");
           //columns.Add(c => c.Company.Name).Titled("Company Name");
           //columns.Add(c => c.Language.Name).Titled("Language Name");

            columns.Add().Titled(null).Css("btn glyphicon glyphicon-pencil tableCell").Filterable(false).Sortable(false)
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(c => Html.ActionLink("Edit", "Edit", new { id = c.Id }))
           .HeaderRenderer = null;

           columns.Add().Titled(null).Css("glyphicon glyphicon-trash tableCell").Filterable(false)
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(c => Html.ActionLink("Delete", null, null, new { @onclick = "return DeleteEventById(" + c.Id + ",'" + c.Name + "');" }))
           .HeaderRenderer = null;
       }).WithPaging(10).Sortable(true).Filterable(true);
    }
    


    <!-- Modal panel -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle" style="float: left;"><b>Delete Event</b></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    ¿Seguro que deseas eliminar el evento [loren ipsum dolor]?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger">Continue Deleting</button>
                </div>
            </div>
        </div>
    </div>



</div>

<script type="text/javascript">

    function selectedCheckbox(status) {
        $("input[type=checkbox]").each(function () {
            $(this).prop("checked", status);
        });
    } 

    $(document).ready(function () {
         
        $("#allChk").click(function () {
            var status = $("#allChk").prop('checked');
            selectedCheckbox(status);
        });
    });

    function DeleteEventById(eventId, eventName) {

        var opcion = confirm("¿Seguro que deseas eliminar el evento [" + eventName + "]?");
        if (opcion == true) {
            $.ajax({
                url: '@Url.Action("Update", "Event")',
                data: { id: eventId },
                type: 'POST',
                success: function () { alert("El evento se ha eliminado correcatemente."); },
                error: function () { alert("Ha ocurrido un error eliminando el evento."); }
            });
	    } else { return false; }
    }
</script>