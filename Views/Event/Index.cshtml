@model IEnumerable<EventManager.Event>

@using GridMvc.Html
@using EventManager.Common;

@{
    ViewBag.Title = "Events";
}
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>


<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<style type="text/css">
    .tableCell {
        display: table-cell !important;
    }
</style>

<div class="jumbotron">
    <div class="container">

        <div class="alert alert-success" style="display:none" id="messageOK">
            <a href="#" id="successLink" class="alert-link"> </a>
        </div>
        <div class="alert alert-danger" style="display:none" id="messageError">
            <a href="#" id="errorLink" class="alert-link"> </a>
        </div>

        <h2>Events</h2>
        <br />

        @using (Ajax.BeginForm("Create", new AjaxOptions
        {
            HttpMethod = "Post",
            OnSuccess = "Loaded"
        }))
        {
            <button type="submit" value="Create" class="btn btn-success">Create</button>
        }
        <br />
        <input type="button" class="btn btn-primary" value="Disable" onclick="location.href='@Url.Action("Disable", "Event", new { id = 230 } )'" />
        <br /><br />

        <!-- Button trigger modal -->
        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModalCenter">
            Delete Simulation
        </button>
        <br /><br />

        <input class="form-control" id="searchInput" type="text" placeholder="Search...">
        <br>

        @{
            //var eventos = ViewData["allEvents"] as List<Event>;
            @Html.Grid(ViewData.Model).Columns(columns =>
            {
               columns.Add().Titled("<input id='allChk' type='checkbox' /> ")
                .Encoded(false).Sanitized(false).SetWidth(30)
                .RenderValueAs(o => Html.CheckBox("checked", false, new { name = "checked", value = o.Id, }));

               columns.Add(c => c.Id).Titled("Event ID");
               columns.Add(c => c.Name).Titled("Name");
               columns.Add(c => c.Description).Titled("Description");
               columns.Add(c => c.Capacity).Titled("Capacity");
               columns.Add(c => c.EventDateTime).Titled("Event DateTime");
               columns.Add(c => c.Sessions).Titled("Nº Sessions");
               columns.Add(c => c.Active).Titled("Active").RenderValueAs(c => c.Active == true ? "Yes" : "No");
               //columns.Add(c => c.Company.Name).Titled("Company Name");
               //columns.Add(c => c.Language.Name).Titled("Language Name");

                columns.Add().Titled(null).Css("btn glyphicon glyphicon-pencil tableCell").Filterable(false).Sortable(false)
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .RenderValueAs(c => Html.ActionLink("Edit", "Edit", new { id = c.Id }))
               .HeaderRenderer = null;

               columns.Add().Titled(null).Css("glyphicon glyphicon-trash tableCell").Filterable(false)
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .RenderValueAs(c => Html.ActionLink("Delete", null, null, new { @onclick = "return DeleteEventById(" + c.Id + ",'" + c.Name + "');" }))
               .HeaderRenderer = null;
           }).WithPaging(10).Sortable(true).Filterable(true);
        }
        
        <!-- Modal panel -->
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle" style="float: left;"><b>Delete Event</b></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        ¿Seguro que deseas eliminar el evento [loren ipsum dolor]?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger">Continue Deleting</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $("div table tbody").attr('id', 'gridTable');

        $("#searchInput").on("keyup", function() {
        var value = $(this).val().toLowerCase();
            $("#gridTable tr").filter(function() {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $("#allChk").click(function () {
            var status = $("#allChk").prop('checked');
            selectedCheckbox(status);
        });
         
        CheckAndShowConfirmationPanel();
    });

    function CheckAndShowConfirmationPanel()
    {
        if ("@((string)Session["ConfirmationDelete"])" != null && "@((string)Session["ConfirmationDelete"])" != "")
        {  
            if ("@((string)Session["ConfirmationDelete"])" == "@Constants.ActionResult_Success") {
                ShowPanelMessage("Successfull"); 
            }
            else if("@((string)Session["ConfirmationDelete"])" == "@Constants.ActionResult_Error") {
                ShowPanelMessage("Error"); 
            } 
        }
    }

    function selectedCheckbox(status) {
        $("input[type=checkbox]").each(function () {
            $(this).prop("checked", status);
        });
    }

    function DeleteEventById(eventId, eventName) {

        var opcion = confirm("¿Seguro que deseas eliminar el evento [" + eventName + "]?");
        if (opcion == true) {
            $.ajax({
                url: '@Url.Action("Remove", "Event")',
                data: { id: eventId },
                type: 'POST'
            });
	    } else { return false; }
    }

    function ShowPanelMessage(status) {

        if (status == "Successfull") { 
            $("#successLink").prop("innerText", "El evento se ha eliminado correctamente.");
            $("#messageOK").show().delay(5000).fadeOut();
        }
        else if (status == "Error") {
            $("#errorLink").prop("innerText", "Ha ocurrido un error eliminando el evento.");
            $("#messageError").show().delay(6000).fadeOut();
        }
        ResetSession('ConfirmationDelete'); 
    }

    function ResetSession(pName) { 

        $.ajax({
            url: '@Url.Action("ResetSession", "Event")',
            data: { name: pName },
            type: 'POST',
            error: function () { alert("Error during reset session state for 'ConfirmationDelete'"); }
        });  
    }

</script>